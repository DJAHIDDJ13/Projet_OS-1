.TH "src/fs.c" 3 "Thu Mar 28 2019" "File Manager" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/fs.c \- main filesystem utilities  

.SH SYNOPSIS
.br
.PP
\fC#include <devutils\&.h>\fP
.br
\fC#include <fs\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBfs_format_super\fP (struct \fBfs_filesyst\fP fs)"
.br
.RI "format the superblock into the virtual filesystem "
.ti -1c
.RI "int \fBfs_dump_super\fP (struct \fBfs_filesyst\fP fs)"
.br
.RI "dump formatted content of the superblock "
.ti -1c
.RI "int \fBfs_format\fP (struct \fBfs_filesyst\fP fs)"
.br
.RI "format the filesystem "
.ti -1c
.RI "int \fBfs_is_data_allocated\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP super, uint32_t datanum)"
.br
.ti -1c
.RI "int \fBfs_is_inode_allocated\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP super, uint32_t inodenum)"
.br
.ti -1c
.RI "int \fBfs_alloc_inode\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP *super, uint32_t *inodenum)"
.br
.RI "allocate an inode "
.ti -1c
.RI "int \fBfs_write_inode\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP super, uint32_t indno, struct \fBfs_inode\fP *inode)"
.br
.ti -1c
.RI "int \fBfs_read_inode\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP super, uint32_t indno, struct \fBfs_inode\fP *inode)"
.br
.ti -1c
.RI "int \fBfs_dump_inode\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP super, uint32_t inodenum)"
.br
.ti -1c
.RI "int \fBfs_alloc_data\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP *super, uint32_t data[], size_t size)"
.br
.ti -1c
.RI "int \fBfs_free_inode\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP *super, uint32_t inodenum)"
.br
.ti -1c
.RI "int \fBfs_free_data\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP *super, uint32_t datanum)"
.br
.ti -1c
.RI "int \fBfs_write_data\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP super, union \fBfs_block\fP *data, uint32_t *blknums, size_t size)"
.br
.ti -1c
.RI "int \fBfs_read_data\fP (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP super, union \fBfs_block\fP *data, uint32_t *blknums, size_t size)"
.br
.in -1c
.SH "Detailed Description"
.PP 
main filesystem utilities 


.PP
\fBAuthor:\fP
.RS 4
ABDELMOUMENE Djahid 
.PP
AYAD Ishak
.RE
.PP
initializing the partition files and utility functions to interact with the os 
.SH "Function Documentation"
.PP 
.SS "int fs_alloc_inode (struct \fBfs_filesyst\fP fs, struct \fBfs_super_block\fP * super, uint32_t * inodenum)"

.PP
allocate an inode allocates the first free inode in the inode table 
.PD 0

.IP "\(bu" 2
fs: the virtual filesystem 
.IP "\(bu" 2
super: the superblock 
.IP "\(bu" 2
inodenum: the inode number allocated 
.PP

.SS "int fs_dump_super (struct \fBfs_filesyst\fP fs)"

.PP
dump formatted content of the superblock prints a human readable superblock from teh filesystem fs 
.SS "int fs_format (struct \fBfs_filesyst\fP fs)"

.PP
format the filesystem formats the superblock and sets the bitmaps to 0 
.SS "int fs_format_super (struct \fBfs_filesyst\fP fs)"

.PP
format the superblock into the virtual filesystem format and calculate the positions and sizes of each section of the filesystem (eg\&. bitmaps and inode and data blocks) 
.PP
\fBReturns:\fP
.RS 4
this functions returns -1 in case of error and 0 on success 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for File Manager from the source code\&.
